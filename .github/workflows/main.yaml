name: Node.js and Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        python-version: [3.8]

    steps:
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
      run: |
        cd react-app  
        npm ci
        npm run build --if-present
        npm test
        
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd flask-app 
        pip install -r requirements.txt
    - name: Run tests for Flask app
      run: |
        cd BackEnd  
        python -m pytest  
############## Look at below, could be done

# name: React and Flask CI

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         python-version: [3.8]

#     steps:
#     - name: Checkout Repository
#       uses: actions/checkout@v2

#     - name: Set up Node.js
#       uses: actions/setup-node@v3
#       with:
#         node-version: 14.x

#     - name: Install Node.js Dependencies
#       run: npm install

#     - name: Set up Python
#       uses: actions/setup-python@v2
#       with:
#         python-version: ${{ matrix.python-version }}

#     - name: Install Python Dependencies
#       run: pip install -r requirements.txt

#     - name: Start React and Flask
#       run: |
#         npm start-backend &   # Start Flask backend in the background
#         npm start             # Start React frontend

#     - name: Wait for Processes to Start
#       run: sleep 30s         # Adjust the duration based on your needs

#     - name: Run Tests
#       run: python pythonTest  # Run your tests here
